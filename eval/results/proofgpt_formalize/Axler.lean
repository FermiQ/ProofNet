import .common 

open set fintype complex polynomial submodule linear_map finite_dimensional
open module module.End inner_product_space

open_locale big_operators

universe u

theorem exercise_1_2 (i : ‚Ñù) : is_cubine_root (Œª (x : ‚Ñù), -(x + (‚áëreal.sqrt_three_add_inv i) / 2)) 1 :=
sorry

theorem exercise_1_3 that_neg_neg {V : Type*} [inner_product_space ‚Ñù V] (v : V) : (‚àÄ (w : V), has_inner.inner (-v) (-w) = has_inner.inner v w) ‚Üí v = -v :=
sorry

theorem exercise_1_4 {Œ± : Type*} [linear_ordered_ring Œ±] [floor_ring Œ±] (a : Œ±) (v : Œ±) (h : int.fract a v = 0) : a = 0 ‚à® v = 0 :=
sorry

theorem exercise_1_6 {u : ennreal} (h : u ‚àà ennreal.of_real |(u, 0)|) : ¬¨u < ‚ä§ :=
sorry

theorem exercise_1_7 {U : set (fin 2 ‚Üí ‚Ñù)} (hU : U ‚àà nhds_within 2 (set.Ioi 0)) : U.nonempty :=
sorry

theorem exercise_1_8 {ùïú V : Type*} [is_R_or_C ùïú] [inner_product_space ùïú V] (K : orthogonal_family ùïú (Œª (i : unit), ‚Ü•(K.subspace))) : K.subspace ‚â§ has_Inf.Inf (orthogonal_family.subspace K) :=
sorry

theorem exercise_1_9 {K : Type u} {V : Type v} [field K] [add_comm_group V] [module K V] {S T : submodule K V} : S ‚à™ T ‚â§ T ‚Üî S ‚â§ T :=
sorry

theorem exercise_3_1 {V : Type u} [add_comm_group V] [module ‚Ñï V] [finite_dimensional ‚Ñï V] : ‚àÉ (a : fin 1 ‚Üí V), ‚àÄ (v : V), T ‚Ä¢ v = a ‚Ä¢ v :=
sorry

theorem exercise_3_8 {V W : Type*} [add_comm_group V] [module ‚Ñï V] [add_comm_group W] [module ‚Ñï W] [h : finite_dimensional ‚Ñï V] (t : tensor_product ‚Ñï V W) : (‚àÉ (u : V), u ‚àà t.to_linear_map.range ‚àß set.range ‚áët = {0}) ‚àß set.range ‚áët = {‚ä§ := ‚áë(t.to_linear_map) u} :=
sorry

theorem exercise_4_4 {p : ‚ÑÇ} {m : ‚Ñï} (h : p.degree = ‚Üëm) : (complex.coyoneda.obj p).roots.nodup ‚Üî ‚àÄ (z : ‚ÑÇ), z ‚àà p.roots ‚Üí z.im = 0 :=
sorry

theorem exercise_5_1 {ùïú : Type*} [is_R_or_C ùïú] {V : Type*} [inner_product_space ùïú V] (T : submodule ùïú V) (m : ‚Ñï) (h : ‚àÄ (u : fin m ‚Üí V), u ‚àà T.is_internal ‚Üí ‚àÄ (v : fin m ‚Üí V), v ‚àà T.is_internal ‚Üí has_inner.inner (u v) (‚áëT v) = 0) : (‚®Ü (i : fin m), u i) = ‚®Ü (i : fin m), v i :=
sorry

theorem exercise_5_11 {V : Type*} [inner_product_space ‚Ñù V] {S T : set V} (hS : inner_product_space.is_R_or_C.S = S) (hT : inner_product_space.is_R_or_C.T = T) : ‚àÉ (x : ‚Ñù), x ‚àà S ‚àß x ‚àà T ‚àß ‚áëis_R_or_C.re (has_inner.inner x S) = ‚áëis_R_or_C.re (has_inner.inner x T) ‚àß ‚áëis_R_or_C.im (has_inner.inner x T) = 0 :=
sorry

theorem exercise_5_12 {ùïú : Type*} [is_R_or_C ùïú] {V : Type*} [inner_product_space ùïú V] (T : ùïú) (hT : ‚àÄ (x : V), ‚àÉ (r : ùïú), T = r ‚Ä¢ x) : inner_product_space.is_scalar_tower.of_is_scalar_tower T (ùüô ùïú) hT = T :=
sorry

theorem exercise_5_13 {ùïú : Type*} [nondiscrete_normed_field ùïú] {V : Type*} [normed_group V] [normed_space ùïú V] (T : (V ‚Üí‚Çó[ùïú] V) ‚Üí‚Çó[ùïú] V ‚Üí‚Çó[ùïú] V) (h : ‚àÄ (s : submodule ùïú V), is_compl s T.submodule) : submodule.map T.linear_map_range = ‚ä§ :=
sorry

theorem exercise_5_20 {ùïú : Type*} [is_R_or_C ùïú] {V : Type*} [inner_product_space ùïú V] (T : ‚Ü•(module.End.eigenvalues T)) [hd2 : fact (finite_dimensional.finrank ùïú V = 1)] (S : ‚Ü•(module.End.eigenspace T)) (hS : ‚àÄ (Œº : ùïú), S.val ‚àà module.End.eigenspace T Œº) (hT : T.val ‚àà module.End.eigenspace S Œº) : S.val = T.val :=
sorry

theorem exercise_6_13 {V : Type*} [inner_product_space ‚Ñù V] {m : ‚Ñï} (e : fin m ‚Üí V) (v : V) (H : ‚à•v‚à• ^ 2 = (list.of_fn (Œª (i : fin m), ‚à•‚áë(e i) v‚à• ^ 2) i).sum) : v ‚àà submodule.span ‚Ñù (set.range e) :=
sorry

theorem exercise_6_16 {ùïú : Type*} [is_R_or_C ùïú] {U : subspace ùïú} : U.projection = ‚ä• ‚Üî U = ‚ä§ :=
sorry

theorem exercise_6_2 {V : Type*} [semi_normed_group V] (u v : V) : ‚Üë(‚áë(proj_norm V) u) = 0 ‚Üî ‚àÄ (a : V), ‚à•u‚à• ‚â§ ‚à•u + a * v‚à• :=
sorry

theorem exercise_6_3 {n : ‚Ñï} (a : ‚Ñï ‚Üí ‚Ñù) (b : ‚Ñï ‚Üí ‚Ñù) : (finset.range n).sum (Œª (j : ‚Ñï), a j * b j) ^ 2 ‚â§ (finset.range n).sum (Œª (j : ‚Ñï), a j * b j) ^ 2 :=
sorry

theorem exercise_6_7 {V : Type*} [inner_product_space.core V] (u v : V) : has_inner.inner u v = (‚à•u + v‚à• ^ 2 - ‚à•u - v‚à• ^ 2 + ‚à•u + complex.I * v‚à• ^ 2 * complex.I - ‚à•u - complex.I * v‚à• ^ 2 * complex.I) / 4 :=
sorry

theorem exercise_7_10 {V : Type*} [inner_product_space ‚ÑÇ V] {T : set V} (hT : measure_theory.dominated_fin_meas_additive (Œª (x : V), T.re_apply_inner_self x) measure_theory.measure_space.volume) (hT_re : ‚àÄ (x : V), ‚áëis_R_or_C.re (has_inner.inner x (‚áëT x))) (hT_im : measure_theory.integrable (Œª (x : V), has_inner.inner x (‚áëT x)) measure_theory.measure_space.volume) : inner_product_space.is_self_adjoint T :=
sorry

theorem exercise_7_11 {V : Type*} [inner_product_space ‚ÑÇ V] [complete_space V] (hV : ‚àÄ (v : V), v ‚àà inner_product_space.of_core.V ‚Üí ‚àÉ (r : ‚Ñù), r ‚àà set.Ioo 0 1 ‚àß has_inner.inner v (inner_product_space.of_core.T v r) = r) (S T : inner_product_space.of_core) : inner_product_space.of_core.inner_products_of_normal S T = S ^ 2 = T :=
sorry

theorem exercise_7_14 {ùïú : Type*} [is_R_or_C ùïú] {V : Type*} [inner_product_space ùïú V] {T : V ‚Üí‚Çó[ùïú] V} (hT : inner_product_space.is_self_adjoint T) {Œµ : ‚Ñù} (hŒµ : 0 < Œµ) (hŒµ' : ‚àÉ (v : V), ‚à•v‚à• = 1 ‚àß ‚à•T v - Œª_hom.conj_ae T v‚à• < Œµ) : module.End.has_eigenvalue T ‚Üë(hT.eigenvalues_def Œµ hŒµ') :=
sorry

theorem exercise_7_5 (K : Type u) (V : Type v) [division_ring K] [add_comm_group V] [module K V] [topological_space K] [topological_add_group K] [densely_ordered K] [no_zero_smul_divisors K V] (h : 2 ‚â§ module.rank K V) : ¬¨submodule.restrict_scalars K (add_comm_group.normal_operals K V) ‚â§ ‚ä§ :=
sorry

theorem exercise_7_6 (ùïú : Type*) {E : Type*} [normed_linear_ordered_field ùïú] [normed_group E] [normed_space ùïú E] {T : set E} (hT : T ‚àà ùïú.normalize_set) : ‚áë(convex_hull ùïú) T = set.range T :=
sorry

theorem exercise_7_9 eigenvalues_real (ùïú : Type*) {E : Type*} [is_R_or_C ùïú] [inner_product_space ùïú E] [finite_dimensional ùïú E] : inner_product_space.is_self_adjoint ùïú ‚Üî ‚àÄ (Œº : ùïú), module.End.eigenspace 0 Œº = ‚ä§ :=
sorry