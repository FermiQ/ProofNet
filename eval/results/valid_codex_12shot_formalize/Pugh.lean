import .common

open set real filter function ring_hom topological_space

open_locale big_operators
open_locale filter
open_locale topology 
noncomputable theory 





theorem exercise_2_12a {Œ± : Type*} [linear_order Œ±]
  {f : ‚Ñï ‚Üí Œ±} {p : ‚Ñï ‚Üí ‚Ñù} (hf : function.injective f) :
  tendsto (Œª n, p (f n)) at_top (ùìù (lim at_top p)) :=
sorry

theorem exercise_2_29 {M : Type*} [metric_space M] :
  function.bijective (Œª (U : set M), U·∂ú) :=
sorry

theorem exercise_2_41 {m : ‚Ñï} (n : ‚Ñù ‚Üí ‚Ñù) [normed_space ‚Ñù n] :
  compact_space (set.Icc (n 0) 1) :=
sorry

theorem exercise_2_57 {X : Type*} [topological_space X]
  (S : set X) (hS : is_connected S) (hS_int : is_connected (interior S)) :
  false :=
sorry

theorem exercise_2_126 {E : set ‚Ñù} (hE : ¬¨ countable E) :
  ‚àÉ (p : ‚Ñù), condensation_point E p :=
sorry

theorem exercise_3_4  (n : ‚Ñï) : tendsto (Œª n, (sqrt (n + 1) - sqrt n)) at_top (ùìù 0) :=
sorry

theorem exercise_3_63b (p : ‚Ñù) (h : p ‚â§ 1) :
  ‚àë k in range 1, 1 / (k * (log k) ^ p) = ‚àû :=
sorry