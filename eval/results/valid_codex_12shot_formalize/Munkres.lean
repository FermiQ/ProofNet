import .common 

open set topological_space filter 
open_locale classical topology filter 
noncomputable theory 





theorem exercise_13_1 (X : Type*) [topological_space X]
  (A : set X) (hA : ‚àÄ x ‚àà A, ‚àÉ U : set X, is_open U ‚àß x ‚àà U ‚àß U ‚äÜ A): 
  is_open A :=
sorry

theorem exercise_13_4a1 {X : Type*} 
  {Œ± : Type*} [fintype Œ±] (T : Œ± ‚Üí topological_space X) :
  topological_space X :=
sorry

theorem exercise_13_4b1 {X : Type*} {Œ± : Type*} 
  (T : Œ± ‚Üí topological_space X) :
  ‚àÉ! (t : topological_space X), ‚àÄ (a : Œ±), t.is_topology_of T a :=
sorry

theorem exercise_13_5a {X : Type*} {A : set (set X)}
  (hA : is_topological_basis A) :
  topology.generated A = ‚ãÇ‚ÇÄ {T : set (set X) | is_topology T ‚àß A ‚äÜ T} :=
sorry

theorem exercise_13_6 :
  ¬¨ (topological_space.is_topological_basis ‚Ñù (lower_limit_topology ‚Ñù) 
  ‚à® topological_space.is_topological_basis ‚Ñù (K_topology ‚Ñù)) :=
sorry

theorem exercise_13_8b :
  is_topological_basis (set.range (Œª (p : ‚Ñö √ó ‚Ñö), {a | p.1 < a ‚àß a < p.2})) :=
sorry

theorem exercise_16_4 {X Y : Type*} [topological_space X] [topological_space Y] :
  is_open (pi_one : X √ó Y ‚Üí X) :=
sorry

theorem exercise_17_4 {X : Type*} [topological_space X]
  (U : set X) (hU : is_open U) (A : set X) (hA : is_closed A) :
  is_open (U \ A) ‚àß is_closed (A \ U) :=
sorry

theorem exercise_18_8b {X Y : Type*} [topological_space X] [topological_space Y]
  [ordered_topology Y] (f g : X ‚Üí Y) (hf : continuous f) (hg : continuous g) :
  continuous (Œª x, min (f x) (g x)) :=
sorry

theorem exercise_19_6a {Œ± : Type*} {Œ≤ : Œ± ‚Üí Type*}
  [‚àÄ a, metric_space (Œ≤ a)] {x : Œ± ‚Üí ‚Ñù} {y : Œ± ‚Üí ‚Ñù}
  (hx : ‚àÄ a, tendsto (Œª n, x n a) at_top (ùìù (y a))) :
  tendsto (Œª n, (x n) a) at_top (ùìù (y a)) :=
sorry

theorem exercise_21_6a {x : ‚Ñù} (hx : 0 ‚â§ x) 
  (hx1 : x ‚â§ 1) :
  ‚àÄ (n : ‚Ñï), tendsto (Œª (n : ‚Ñï), x ^ n) at_top (ùìù (x ^ n)) :=
sorry

theorem exercise_21_8  {X Y Z : Type*} [metric_space X] [metric_space Y] [metric_space Z]
  (hY : compact_space Y) (f : X ‚Üí Y) (g : Y ‚Üí Z) (hgc : continuous g)
  (hgi : function.injective g)
  (h : uniform_continuous (g ‚àò f)) : uniform_continuous f :=
sorry

theorem exercise_22_2b {X Y : Type*} [topological_space X] 
  [topological_space Y] (f : X ‚Üí Y) (hf : continuous f) (hf_eq : ‚àÄ x : X, f x = x) :
  quotient_map f :=
sorry

theorem exercise_23_2 {X : Type*} [topological_space X]
  {n : ‚Ñï} (h : ‚àÄ n : ‚Ñï, connected (A n)) (h‚ÇÅ : ‚àÄ n : ‚Ñï, A n ‚à© A (n + 1) ‚â† ‚àÖ) :
  connected (‚ãÉ n, A n) :=
sorry

theorem exercise_23_4 {X : Type*} [fintype X] (hX : ¬¨fintype.card X = 1) :
  connected_space (finite_compl_topology X) :=
sorry

theorem exercise_23_9  {X Y : Type*} [topological_space X] [topological_space Y]
  (hX : connected_space X) (hY : connected_space Y)
  (A : set X) (hA : is_proper_subset A) (B : set Y) (hB : is_proper_subset B) :
  connected_space ((X √ó Y) \ (A √ó B)) :=
sorry

theorem exercise_24_2 {f : circle ‚Üí ‚Ñù} 
  (hf : continuous f) :
  ‚àÉ (x : circle), f x = f (-x) :=
sorry

theorem exercise_25_4  {X : Type*} [topological_space X] [locally_path_connected_space X]
  {U : set X} (hU : is_open U) (hcU : is_connected U) :
  path_connected_space U :=
sorry

theorem exercise_26_11  {X : Type*} [topological_space X] [compact_space X] [t2_space X]
  {Y : Type*} [topological_space Y] [t2_space Y]
  {f : X ‚Üí Y} (hf : continuous f) (hf_conn : ‚àÄ x, is_connected (f ‚Åª¬π' {x}))
  (hf_closed : ‚àÄ x, is_closed (f ‚Åª¬π' {x}))
  (hf_simply_ordered : ‚àÄ x y, x ‚â† y ‚Üí ‚àÉ z, f ‚Åª¬π' {z} ‚äÜ f ‚Åª¬π' {x} ‚àß f ‚Åª¬π' {z} ‚äÜ f ‚Åª¬π' {y}) :
  is_connected (f ‚Åª¬π' univ) :=
sorry

theorem exercise_27_4 {X : Type*} [metric_space X]
  (hX : connected_space X) (hX_card : cardinal.mk X > 1) :
  cardinal.mk X = ‚ä§ :=
sorry

theorem exercise_28_5  {X : Type*} [topological_space X] (hX : countably_compact X) :
  ‚àÄ (C : ‚Ñï ‚Üí set X), (‚àÄ n, is_closed (C n)) ‚Üí (‚àÄ n, C n ‚â† ‚àÖ) ‚Üí
  ‚àÉ (x : X), ‚àÄ n, x ‚àà C n :=
sorry

theorem exercise_29_1 : ¬¨ locally_compact_space ‚Ñö :=
sorry

theorem exercise_29_10 {X : Type*} 
  [topological_space X] [t2_space X] [locally_compact_space X] (x : X) 
  (U : set X) (hU : is_open U) (hxU : x ‚àà U) :
  ‚àÉ (V : set X), is_open V ‚àß compact_space (closure V) ‚àß closure V ‚äÜ U :=
sorry

theorem exercise_30_13 {X : Type*} 
  [topological_space X] (hX : countable (dense_countable X)) 
  (h : ‚àÄ (U : set X), is_open U ‚Üí ‚àÄ (V : set X), is_open V ‚Üí U ‚â† V ‚Üí U ‚à© V = ‚àÖ) :
  countable (set.range (Œª (U : set X), U)) :=
sorry

theorem exercise_31_2 
  {X : Type*} [topological_space X] (hX : normal_space X) 
  {A B : set X} (hA : is_closed A) (hB : is_closed B) (hAB : disjoint A B) :
  ‚àÉ (U V : set X), is_open U ‚àß is_open V ‚àß A ‚äÜ U ‚àß B ‚äÜ V ‚àß disjoint (closure U) (closure V) :=
sorry

theorem exercise_32_1 {X : Type*} [topological_space X]
  [normal_space X] (Y : set X) (hY : is_closed Y) : normal_space Y :=
sorry

theorem exercise_32_2b {Œ± : Type*} {X : Œ± ‚Üí Type*} [‚àÄ a, regular_space (X a)]
  (h : regular_space (Œ† a, X a)) : ‚àÄ a, regular_space (X a) :=
sorry

theorem exercise_32_3 {X : Type*} [topological_space X]
  (hX : locally_compact_space X) (hX' : hausdorff_space X) :
  regular_space X :=
sorry

theorem exercise_33_8 {X : Type*} [topological_space X]
  (hX : completely_regular_space X) (A B : set X) (hA : is_closed A) 
  (hB : is_closed B) (hAB : disjoint A B) (hA_comp : compact_space A) :
  ‚àÉ (f : X ‚Üí ‚Ñù), continuous f ‚àß f '' A = {0} ‚àß f '' B = {1} :=
sorry

theorem exercise_38_6 {X : Type*} [topological_space X]
  [comp_reg_space X] (hX : connected_space X) :
  connected_space (compactification X) :=
sorry